import Head from "next/head";
import { Inter } from "next/font/google";
import { Col, Container, Row, Tab, Tabs } from "react-bootstrap";
import DataTable from "./_components/DataTable";
import IconLink from "./_components/IconLink";
import { BsGear, BsShieldCheck, BsGraphUp } from "react-icons/bs";
import { RiEqualizerLine } from "react-icons/ri";
import { TbUsers, TbApi } from "react-icons/tb";
import { PiReceiptLight } from "react-icons/pi";
import { LiaFileImageSolid } from "react-icons/lia";
import { BiBookContent } from "react-icons/bi";
import { TbApps } from "react-icons/tb";
import { FiLock } from "react-icons/fi";
import { IoIosSwap } from "react-icons/io";
import withAuth from "@/hooks/withAuth.hook";
import { MdLogout } from "react-icons/md";
import { store, useAppSelector } from "@/app/lib/store";
import { IoLocationOutline } from "react-icons/io5";
import { useRouter } from "next/router";
const inter = Inter({ subsets: ["latin"] });

function DashBoard() {
  const authenticatedUser = useAppSelector(
    (state) => state.app.authenticatedUser
  );
  const router = useRouter();
  const handleLogout = () => {
    localStorage.removeItem("authenticatedUser");
    store.dispatch({ type: "app/clearAuthenticatedUser", payload: null });
    window.location.href = "/login";
  };
  return (
    <>
      <Head>
        <title>Task App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container fluid>
          <Row>
            <Col className=" vh-100 ps-4 ">
             <div className="position-fixed">
             <div style={{ fontWeight: 500 }} className="fs-3 mt-4">
                Administration
              </div>
              <div className="text-info">learn more</div>
              <IconLink icon={<BsGear />} title="General" />
              <IconLink icon={<RiEqualizerLine />} title="Customization" />
              {authenticatedUser?.role?.name === "Admin" || "Super Admin" ? (
                <IconLink icon={<TbUsers />} title="Users" />
              ) : null}

              <IconLink icon={<BsShieldCheck />} title="Security" />
              <IconLink icon={<TbApi />} title="API" />
              <IconLink icon={<PiReceiptLight />} title="Billing" />
              <IconLink icon={<BsGraphUp />} title="Usage Stats" />
              <IconLink icon={<LiaFileImageSolid />} title="Tidy Up" />
              <IconLink icon={<BiBookContent />} title="Content Directory" />
              <IconLink icon={<TbApps />} title="Apps" />
              <IconLink icon={<FiLock />} title="Permissions" />
              <IconLink icon={<IoIosSwap />} title="Cross Account Copier" />
              <IconLink
                icon={<IoLocationOutline />}
                title="Get distance"
                onClick={() => {
                  router.push("/distance");
                }}
              />

              <IconLink
                onClick={handleLogout}
                icon={<MdLogout color="red" />}
                title="Logout"
                titleColor="red"
              />
             </div>
            </Col>
            <Col xs={9} className=" vh-100">
              <Tabs
                defaultActiveKey="users"
                id="uncontrolled-tab-example"
                className="mt-4"
              >
                <Tab eventKey="users" title="Users" active>
                  <Row className="mt-3">
                    <Col>
                      <div className="me-auto h2 fw-bold">User management</div>
                    </Col>
                    <Col>
                      <div className="ms-auto text-end">
                        <span role="button">See billed users</span>
                        <span role="button" className="ms-5">
                          Manage teams
                        </span>
                      </div>
                    </Col>
                  </Row>
                  <DataTable />
                </Tab>
                <Tab eventKey="departments" title="Departments">
                  Tab content for Profile
                </Tab>
                <Tab eventKey="boardownership" title="Board ownership">
                  Tab content for Contact
                </Tab>
                <Tab
                  eventKey="automationownership"
                  title="Automation ownership"
                >
                  Tab content for Contact
                </Tab>
              </Tabs>
            </Col>
          </Row>
        </Container>
      </main>
    </>
  );
}

export default withAuth(DashBoard);
